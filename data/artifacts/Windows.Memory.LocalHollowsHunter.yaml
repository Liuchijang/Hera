name: Windows.Memory.LocalHollowsHunter
description: |
   Use hollows_hunter to detect suspicious process injections.

   Upload any findings to the server, including process dumps.
parameters:
  - name: DetectPidRegex
    description: "regex search Pid over detects"
    default:  .*Detected:\s\d{1,5}
    type: regex
tools:
 - name: hollows_hunter
   github_project: hasherezade/hollows_hunter
   github_asset_regex: hollows_hunter64.exe
   serve_locally: true

precondition:
   SELECT OS From info() where OS = 'windows'
   
sources:
  - name: Output
    query: |
      -- Get the path to the hollows_hunter tool.\

      LET binaries <= SELECT dirname(path=Exe) + '\\hollows_hunter64.exe' as HLabsolutePath, dirname(path=Exe) as curDir
        FROM pslist(pid=getpid())
      LET HollowsHunterExe <= str(str=binaries[0].HLabsolutePath)
      LET HollowsHunterOutput <= str(str=binaries[0].curDir) + '\\..\\output\\HollowsHunter'
      LET ResultFile <= str(str=binaries[0].curDir) + '\\..\\output\\HollowsHunter\\summary.json'
      -- Run the tool and relay back the output to the output\HollowHunter folder.
      LET HollowHunterOutput <= SELECT Stdout
      FROM execve(argv=[HollowsHunterExe,
           "/hooks",
           "/obfusc", 3,
           "/shellc", 3, 
           "/json", "/dir", HollowsHunterOutput], sep="\n")
      -- Print detected processes and its information to screen
      LET Parsing <= SELECT split(string=Stdout,sep=' ')[2] as Detected
      FROM HollowHunterOutput
      WHERE Stdout =~ DetectPidRegex
      LET Parsed <= SELECT split(string=Detected,sep='\r')[0] as DetectedPid
      FROM Parsing
      SELECT DetectedPid, { select Exe, CommandLine, Username from pslist(pid=int(int=DetectedPid)) } as ProcessInfo
      FROM Parsed
            
